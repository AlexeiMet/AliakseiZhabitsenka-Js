console.log("1" + 2 + 0); // Ответ 120
// Если один из аргументов оператора "+" является строкой то другой аргумент преобразуется в строку и вде строки конкатенируются
console.log("1" - 1 + 2); // Ответ 2
// В математических выражениях аргументы преобразуются в число (предыдущий пример - исключение). Строка преобразуется в число из-за операторо "-"
console.log(true + false); // Ответ 1
// См. предыдущий пример. True преобразуется в 1. False преобразуется в 0
console.log(10 / "5"); // Ответ 2
// Cм второй пример. Строка преобразуется в число из-за оператора "/". 10 / 5 = 2
console.log("2" * "3"); // Oтвет 6
// См второй пример. Обе строки преобразуются в числа из-за оператора "*". 2 * 3 = 6
console.log(4 + 5 + "px"); // Ответ "9px"
// При первом операторе "+" два числа складываются. При втором будет 9 + "px", см. первый пример, число преобразуется в строку.
console.log("$" + 4 + 5); // Ответ $45
// См первый пример.
console.log("42" - 2); // Ответ 40
// См. второй пример. Строка преобразуется в число из-зи оператора "-"
console.log("4px" - 2); // Ответ NaN
// Строка содержащая символы не являющиеся числом или переносом, прбелом и тд. при преобразованиее в число дает NaN. Математические операции с NaN возвращают NaN (кроме случая когда оператором является "+" а одним из аргуменов строка)
console.log(7 / 0); // Ответ Infinity
// Деление на ноль дает бесконечность.
console.log(" -9\n" + 5); // Ответ " -9\n5"
// См. первый пример. Конкатенация строк.
console.log(" -9\n" - 5); // Ответ -14
// См. пример 2. Строка " -9\n" преобразуется в число 9. См. пример 9.
console.log(5 && 2); // Ответ 2
// Оператор "&&" возвращает первый аргумент если он дает false при преобразовании в boolean, в ином случае возвращает второй аргумент
console.log(2 && 5); // Ответ 5
// См. предыдущий пример.
console.log(5 || 0); // Ответ 5
// Оператор "||" возвращает первый аргумент если он дает true при преобразовании в boolean, в ином случае возвращает второй аргумент
console.log(0 || 5); // Ответ 5
// См. предыдущий пример
console.log(null + 1); // Ответ 1
// null дает 0 при преобразовании в число
console.log(undefined + 1); // Ответ NaN
// undefined дает NaN при преобразовании в число
console.log(null == "\n0\n"); // Ответ false
// null равен только себе и undefined
console.log(+null == +"\n0\n"); // Ответ true
// Сначала null преобразуется в число - получается 0, затем строка пребразуется в число получается 0. 0 == 0
console.log({} + []); // Ответ "object Object"
// Из-за оперетора "+" оба аргумента приводятся к числу, но так как у объекта и массива не метода valueOf, то применяется метод toString. Для объекта метод toString вернет строку "object Object", для массива он вернет строку состоящую из всех элементов разделенных запятой.
console.log([] + {}) // Ответ "object Object"
// См. предыдущий пример.
// При записи выражения {} + [] в консоли. Первые скобки считаются не за объект а за блок. И в результате высчитывается выражение +[], которое сначала преобразует массив к строке "", а + преобразует пустую строку в 0.